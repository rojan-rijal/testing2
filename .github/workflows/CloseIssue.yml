# This is a basic workflow to help you get started with Actions
name: CloseH1Issue

# Controls when the workflow will run
on:
  issues:
  # Triggers the workflow on an issue close
    types: [ "closed" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "close_h1_issue"
  close_h1_issue:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      report_number: 1602681
      body: ${{ github.event.issue.body }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get H1 Report Number
        id: get_report_num
        run: |
          echo ::set-output name=line_num::$(echo "$body" | grep -n 'https://hackerone.com/' | cut -d ":" -f 1)
          echo DEBUG THE LINE NUMBER IS: ${{steps.get_report_num.outputs.line_num}}
          echo ::set-output name=report_num::$(echo "$body" | sed -n '${{steps.get_report_num.outputs.line_num}}p' | rev | cut -d "/" -f 1 | rev)
          echo DEBUG THE REPORT NUMBER IS ${{steps.get_report_num.outputs.report_num}}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: run curl command
        run: |
          curl --location --request POST 'https://api.hackerone.com/v1/reports/'${{steps.get_report_num.outputs.report_num}}'/state_changes' --header 'Authorization: Basic ${{secrets.H1_TOKEN}}' --header 'Content-Type: application/json' --data-raw '{"data": {"type": "state-change","attributes": {"message": "string","state": "resolved"    }}}'
